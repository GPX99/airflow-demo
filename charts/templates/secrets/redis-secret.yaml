# We will create these secrets (if necessary) _even if_ we aren't
# currently using CeleryExecutor or CeleryKubernetesExecutor. As we are
# relying on the "pre-install" hack to prevent changing randomly generated passwords,
# updating the executor later doesn't give us the opportunity to deploy them
# when we need them. We will always deploy them defensively to make the executor
# update path actually work.

################################
## Airflow Redis Password Secret
#################################
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.releaseStage }}-airflow-redis-password
  namespace: airflow
  labels:
    tier: airflow
    component: redis
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
    "helm.sh/hook-weight": "0"
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: SecretStore
    name: {{ .Values.releaseStage }}-kubernetes-secretstore
  data:
    - secretKey: password
      remoteRef:
        property: REDIS_PASSWORD
        key: REDIS_PASSWORD

---
##################################
## Airflow Redis Connection Secret
##################################
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.releaseStage }}-airflow-broker-url
  namespace: airflow
  labels:
    tier: airflow
    component: redis
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
    "helm.sh/hook-weight": "0"
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: SecretStore
    name: {{ .Values.releaseStage }}-kubernetes-secretstore
  data:
    - secretKey: connection
      remoteRef:
        property: BROKER_CONNECTION_URL
        key: BROKER_CONNECTION_URL
